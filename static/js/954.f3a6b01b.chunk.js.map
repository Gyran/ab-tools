{"version":3,"file":"static/js/954.f3a6b01b.chunk.js","mappings":"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","sources":["components/text-input/index.tsx","pages/calculate-december-salary.tsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js"],"sourcesContent":["import { useCallback, ChangeEvent } from 'react';\nimport { TextField } from '@mui/material';\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value: string;\n  type?: 'text' | 'number';\n  step?: number;\n};\nconst TextInput = (props: Props) => {\n  const { label, onChange, value, type = 'text', step } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>, ...b: any) => {\n      onChange(e.currentTarget.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <TextField\n      label={label}\n      value={value}\n      onChange={handleChange}\n      type={type}\n      inputProps={{ step }}\n    />\n  );\n};\n\nexport default TextInput;\n","import { Box, Link, Stack, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport TextInput from '../components/text-input';\n\nconst ensureNumber = (input: any, fallback = 0): number => {\n  const parsed = parseFloat(input);\n\n  if (Number.isFinite(parsed)) {\n    return parsed;\n  }\n\n  return fallback;\n};\n\nconst StateTaxBreakPoint = 537200;\nconst HuvudregelnIncomeBreakPoint = 430737;\n\nconst sekFormatter = new Intl.NumberFormat('sv-SE', {\n  style: 'currency',\n  currency: 'SEK',\n});\n\nconst useNumberInputState = (\n  initialInput = '',\n  fallbackValue = 0,\n): [string, React.Dispatch<React.SetStateAction<string>>, number] => {\n  const [input, handleChange] = useState(initialInput);\n  const value = ensureNumber(input, fallbackValue);\n\n  return [input, handleChange, value];\n};\n\nconst CalculateDecemberSalary = () => {\n  const [bruttoLonInput, handleBruttoLonChange, bruttoLon] =\n    useNumberInputState();\n  const [formanerInput, handleFormanerIChange, formaner] =\n    useNumberInputState();\n  const [\n    ersattningarOchPensionInput,\n    handleErsattningarOchPensionChange,\n    ersattningarOchPension,\n  ] = useNumberInputState();\n\n  const totalIncome = bruttoLon + formaner + ersattningarOchPension;\n\n  const suggestedDecSalary = StateTaxBreakPoint - totalIncome;\n\n  return (\n    <Box>\n      <Typography variant=\"h2\">\n        Hur mycket behöver du ta i lön i december för att nå till gränsen\n        (Inkomstår 2021)\n      </Typography>\n      <Typography variant=\"body1\" mt={2}>\n        Alla beräkningar är baserade på att det endast är du som tar ut lön från\n        företaget och att all lön som redovisas i formuläret är ifrån ditt\n        företag.\n      </Typography>\n      <Box sx={{ display: 'grid', gridTemplateColumns: '1fr 300px' }}>\n        <Stack mt={2} spacing={2} pr={3}>\n          <Typography variant=\"body1\">\n            Samla in samtliga{' '}\n            <Link href=\"https://sso.skatteverket.se/ms/ms_web/page.do#/privat/skatter-deklaration/inkomstuppgifter\">\n              inkomstuppgifter från skatteverket\n            </Link>{' '}\n            till och med November.\n          </Typography>\n          <TextInput\n            label=\"Bruttolön\"\n            type=\"number\"\n            value={bruttoLonInput}\n            onChange={handleBruttoLonChange}\n          />\n          <TextInput\n            label=\"Förmåner\"\n            type=\"number\"\n            value={formanerInput}\n            onChange={handleFormanerIChange}\n          />\n          <TextInput\n            label=\"Ersättningar och pension \"\n            type=\"number\"\n            value={ersattningarOchPensionInput}\n            onChange={handleErsattningarOchPensionChange}\n          />\n        </Stack>\n        <Stack spacing={2}>\n          <Typography variant=\"body1\">\n            Inkomster totalt: {sekFormatter.format(totalIncome)}\n          </Typography>\n          <Typography variant=\"body1\">\n            <Link href=\"https://www.skatteverket.se/privat/etjansterochblanketter/svarpavanligafragor/inkomstavtjanst/privattjansteinkomsterfaq/narskamanbetalastatliginkomstskattochhurhogarden.5.10010ec103545f243e8000166.html\">\n              Brytpunkt innan statlig skatt\n            </Link>\n            : {sekFormatter.format(StateTaxBreakPoint)}\n          </Typography>\n          <Typography variant=\"body1\">\n            Tänk också på för att kunna använda{' '}\n            <Link href=\"https://www.bjornlunden.se/skatteplanering/s%C3%A5-maxar-du-utdelningen-enligt-312-regle__211\">\n              huvudregeln för utdelning måste du minst ta ut\n            </Link>{' '}\n            {sekFormatter.format(HuvudregelnIncomeBreakPoint)}. Detta beloppet\n            är baserat på att det är endast du som tar ut lön från företaget.\n          </Typography>\n          <Typography variant=\"body1\">\n            Föreslagen bruttolön i december:{' '}\n            <Typography component=\"span\" sx={{ fontWeight: 'bold' }}>\n              {sekFormatter.format(suggestedDecSalary)}\n            </Typography>\n          </Typography>\n          <Typography variant=\"body1\">\n            Lägsta lön för att kunna använda huvudregeln för utdelning 2022:{' '}\n            <Typography component=\"span\" sx={{ fontWeight: 'bold' }}>\n              {sekFormatter.format(\n                Math.max(HuvudregelnIncomeBreakPoint - bruttoLon, 0),\n              )}\n            </Typography>\n          </Typography>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default CalculateDecemberSalary;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"names":["props","label","onChange","value","type","step","handleChange","useCallback","e","currentTarget","inputProps","ensureNumber","input","fallback","parsed","parseFloat","Number","isFinite","StateTaxBreakPoint","HuvudregelnIncomeBreakPoint","sekFormatter","Intl","NumberFormat","style","currency","useNumberInputState","initialInput","fallbackValue","useState","bruttoLonInput","handleBruttoLonChange","bruttoLon","formanerInput","handleFormanerIChange","formaner","ersattningarOchPensionInput","handleErsattningarOchPensionChange","totalIncome","suggestedDecSalary","variant","mt","sx","display","gridTemplateColumns","spacing","pr","href","format","component","fontWeight","Math","max","getLinkUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","colorTransformations","primary","textPrimary","secondary","textSecondary","error","LinkRoot","styled","Typography","name","overridesResolver","styles","ownerState","root","capitalize","underline","button","theme","color","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","linkClasses","React","inProps","ref","useThemeProps","className","onBlur","onFocus","TypographyClasses","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","focusVisible","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current"],"sourceRoot":""}