{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/text-input/index.tsx","components/layout/index.js","pages/vat-calculator.tsx"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_slicedToArray","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","TypeError","StyledWrapper","styled","div","StyledInput","input","StyledLabel","label","TextInput","props","onChange","type","step","handleChange","useCallback","e","currentTarget","Stack","VatCalculator","useState","vatRateInput","setVatRateInput","exclVatInput","setExclVatInput","vatRate","useMemo","parseInt","exclVat","parseFloat","vatSum","handleVatRangeChange","handleExclVatChange","handleIncVatChange","parsedInc","Number","isFinite","toFixed"],"mappings":"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","file":"static/js/5.a765db05.chunk.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useCallback, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\nconst StyledWrapper = styled.div``;\nconst StyledInput = styled.input``;\nconst StyledLabel = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value: string;\n  type?: 'text' | 'number';\n  step?: number;\n};\nconst TextInput = (props: Props) => {\n  const { label, onChange, value, type = 'text', step } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(e.currentTarget.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <StyledWrapper>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput\n        onChange={handleChange}\n        type={type}\n        value={value}\n        step={step}\n      />\n    </StyledWrapper>\n  );\n};\n\nexport default TextInput;\n","import styled from 'styled-components/macro';\n\nconst Stack = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-row-gap: 10px;\n`;\n\nexport { Stack };\n","import { useCallback, useMemo, useState } from 'react';\n\nimport { Stack } from '../components/layout';\nimport TextInput from '../components/text-input';\n\ntype Props = {};\n\nconst VatCalculator = (props: Props) => {\n  const [vatRateInput, setVatRateInput] = useState('25');\n  const [exclVatInput, setExclVatInput] = useState('');\n\n  const vatRate = useMemo(\n    () => (vatRateInput !== '' ? parseInt(vatRateInput, 10) / 100 : -1),\n    [vatRateInput],\n  );\n  const exclVat = useMemo(() => parseFloat(exclVatInput), [exclVatInput]);\n  const vatSum = useMemo(() => exclVat * vatRate, [exclVat, vatRate]);\n\n  const handleVatRangeChange = useCallback((value) => {\n    setVatRateInput(value);\n  }, []);\n  const handleExclVatChange = useCallback((value) => {\n    setExclVatInput(value);\n  }, []);\n  const handleIncVatChange = useCallback(\n    (value) => {\n      const parsedInc = parseFloat(value);\n      if (Number.isFinite(parsedInc)) {\n        const calcExcl = parsedInc / (1 + vatRate);\n\n        setExclVatInput(calcExcl.toString());\n      } else {\n        setExclVatInput('');\n      }\n    },\n    [vatRate],\n  );\n\n  return (\n    <Stack>\n      <TextInput\n        label=\"Momssats (%)\"\n        type=\"number\"\n        value={vatRateInput}\n        onChange={handleVatRangeChange}\n      />\n      <TextInput\n        label=\"Exklusive moms (kr)\"\n        type=\"number\"\n        value={exclVatInput}\n        onChange={handleExclVatChange}\n      />\n      <TextInput\n        label=\"Inklusive moms (kr)\"\n        type=\"number\"\n        value={(exclVat + vatSum).toString()}\n        onChange={handleIncVatChange}\n      />\n      <div>Moms: {Number.isFinite(vatSum) ? vatSum.toFixed(2) : '-'} kr</div>\n    </Stack>\n  );\n};\n\nexport default VatCalculator;\n"],"sourceRoot":""}