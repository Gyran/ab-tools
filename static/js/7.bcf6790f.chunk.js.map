{"version":3,"sources":["components/invoice-qr-code.tsx/index.tsx","components/qr-code/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","pages/InvoiceQRCodePage.tsx"],"names":["PaymentMethodType","QRCode","props","content","width","canvasRef","useRef","useEffect","current","qrcode","toCanvas","errorCorrectionLevel","ref","InvoiceQRCode","uqr","tp","nme","cid","iref","ddt","Date","due","pt","BG","acc","useMemo","JSON","stringify","toISOString","slice","replace","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","identityParseFn","InvoiceQRCodePage","inputItems","label","element","type","step","dataKey","parseFn","parseFloat","parseInt","PG","useState","getTime","data","setData","updateData","useCallback","newValue","prevData","className","map","inputItem","React","cloneElement","onChange","e","strValue","currentTarget"],"mappings":"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","file":"static/js/7.bcf6790f.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport QRCode from '../qr-code';\n\nexport enum PaymentMethodType {\n  IBAN = 'IBAN',\n  BBAN = 'BBAN',\n  BG = 'bg',\n  PG = 'PG',\n}\n\ntype Props = {\n  width: number;\n\n  // https://drive.google.com/file/d/14XR6F1XnUkuWatldkOVr69Fr4of5g98P/view\n  uqr?: number;\n  tp?: number;\n  nme?: string;\n  cid?: string;\n  iref?: number;\n  ddt?: Date;\n  due?: number;\n  pt?: PaymentMethodType;\n  acc?: string;\n};\n\nconst InvoiceQRCode = (props: Props) => {\n  const {\n    uqr = 1,\n    tp = 1,\n    nme = '',\n    cid = '',\n    iref = -1,\n    ddt = new Date(),\n    due = 0,\n    pt = PaymentMethodType.BG,\n    acc = '',\n\n    width,\n  } = props;\n\n  const content = useMemo(() => {\n    return JSON.stringify({\n      uqr,\n      tp,\n      nme,\n      cid,\n      iref,\n      ddt: ddt.toISOString().slice(0, 10).replace(/-/g, ''),\n      due,\n      pt,\n      acc,\n    });\n  }, [uqr, tp, nme, cid, iref, ddt, due, pt, acc]);\n\n  return <QRCode content={content} width={width} />;\n};\n\nexport default InvoiceQRCode;\n","import React, { useEffect, useRef } from 'react';\nimport qrcode from 'qrcode';\n\ntype QRCodeProps = {\n  content: string;\n  width: number;\n};\nconst QRCode = (props: QRCodeProps) => {\n  const { content, width } = props;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (canvasRef.current) {\n      qrcode.toCanvas(canvasRef.current, content, {\n        width,\n        errorCorrectionLevel: 'H',\n      });\n    }\n  }, [content, width]);\n\n  return <canvas ref={canvasRef} />;\n};\n\nexport default QRCode;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, { ReactElement, useCallback, useState } from 'react';\nimport InvoiceQRCode, {\n  PaymentMethodType,\n} from '../components/invoice-qr-code.tsx';\n\nconst identityParseFn = (value: string) => value;\n\ntype InputItem = {\n  label: string;\n  element: ReactElement;\n  dataKey: string;\n  parseFn?: (value: string) => unknown;\n};\n\nconst QR_CODE_WIDTH = 300;\n\nconst InvoiceQRCodePage = () => {\n  const inputItems: InputItem[] = [\n    {\n      label: 'amount',\n      element: <input type=\"number\" step={0.01} />,\n      dataKey: 'due',\n      parseFn: (value) => parseFloat(value),\n    },\n    {\n      label: 'ocr',\n      element: <input type=\"number\" />,\n      dataKey: 'iref',\n      parseFn: (value) => parseInt(value, 10),\n    },\n    { label: 'account', element: <input type=\"text\" />, dataKey: 'acc' },\n    {\n      label: 'payment type',\n      element: (\n        <select>\n          <option>{PaymentMethodType.BG}</option>\n          <option>{PaymentMethodType.PG}</option>\n        </select>\n      ),\n      dataKey: 'pt',\n    },\n  ];\n\n  const [data, setData] = useState({\n    uqr: 1,\n    tp: 1,\n    nme: '',\n    cid: '',\n    iref: -1,\n    ddt: new Date(new Date().getTime() + 1 * 24 * 60 * 60 * 1000),\n    due: -1,\n    pt: PaymentMethodType.BG,\n    acc: '',\n  });\n\n  const updateData = useCallback((key, newValue) => {\n    setData((prevData) => {\n      return { ...prevData, [key]: newValue };\n    });\n  }, []);\n\n  return (\n    <div className=\"app-wrapper\">\n      {inputItems.map((inputItem) => {\n        return (\n          <div>\n            {inputItem.label}{' '}\n            {React.cloneElement(inputItem.element, {\n              onChange: (e: any) => {\n                const strValue = e.currentTarget.value;\n                const parseFn = inputItem.parseFn ?? identityParseFn;\n\n                updateData(inputItem.dataKey, parseFn(strValue));\n              },\n            })}\n          </div>\n        );\n      })}\n      <InvoiceQRCode width={QR_CODE_WIDTH} {...data} />\n    </div>\n  );\n};\n\nexport default InvoiceQRCodePage;\n"],"sourceRoot":""}