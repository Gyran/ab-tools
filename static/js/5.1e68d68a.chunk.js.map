{"version":3,"sources":["components/text-input/index.tsx","components/layout/index.js","pages/calculate-december-salary.tsx"],"names":["StyledWrapper","styled","div","StyledInput","input","StyledLabel","label","TextInput","props","onChange","value","type","step","handleChange","useCallback","e","currentTarget","Stack","PageWrapper","Wrapper","ensureNumber","parsed","parseFloat","Number","isFinite","StateTaxIncomeLimit","CalculateDecemberSalary","useState","bruttoLonInput","handleBruttoLonChange","formanerInput","handleFormanerIChange","ersattningarOchPensionInput","handleErsattningarOchPensionChange","totalIncome","suggestedDecSalary","sekFormatter","useMemo","Intl","NumberFormat","style","currency","href","format"],"mappings":"kJAGMA,EAAgBC,IAAOC,IAAV,0BACbC,EAAcF,IAAOG,MAAV,0BACXC,EAAcJ,IAAOK,MAAV,4FAoCFC,IAvBG,SAACC,GACjB,IAAQF,EAAgDE,EAAhDF,MAAOG,EAAyCD,EAAzCC,SAAUC,EAA+BF,EAA/BE,MAAzB,EAAwDF,EAAxBG,YAAhC,MAAuC,OAAvC,EAA+CC,EAASJ,EAATI,KAEzCC,EAAeC,uBACnB,SAACC,GACCN,EAASM,EAAEC,cAAcN,SAE3B,CAACD,IAGH,OACE,eAACT,EAAD,WACE,cAACK,EAAD,UAAcC,IACd,cAACH,EAAD,CACEM,SAAUI,EACVF,KAAMA,EACND,MAAOA,EACPE,KAAMA,S,sECjCRK,E,KAAQhB,EAAOC,IAAV,mEAAGD,CAAH,gE,uFCGLiB,EAAcjB,IAAOC,IAAV,4FAAGD,CAAH,MACXkB,EAAUlB,IAAOC,IAAV,wFAAGD,CAAH,mDAKPmB,EAAe,SAAChB,GACpB,IAAMiB,EAASC,WAAWlB,GAE1B,OAAImB,OAAOC,SAASH,GACXA,EAGF,GAGHI,EAAsB,OA2EbC,UAzEiB,WAC9B,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAA+CF,mBAAS,IAAxD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EACEJ,mBAAS,IADX,mBAAOK,EAAP,KAAoCC,EAApC,KAOMC,EAJYd,EAAaQ,GACdR,EAAaU,GACCV,EAAaY,GAItCG,EAAqBV,EAAsBS,EAE3CE,EAAeC,mBAAQ,WAC3B,OAAO,IAAIC,KAAKC,aAAa,QAAS,CACpCC,MAAO,WACPC,SAAU,UAEX,IAEH,OACE,eAACvB,EAAD,WACE,sIAIA,eAACC,EAAD,WACE,eAAC,IAAD,WACE,kDACoB,IAClB,mBAAGuB,KAAK,6FAAR,mDAEK,IAJP,4BAOA,cAAC,IAAD,CACEpC,MAAM,eACNK,KAAK,SACLD,MAAOkB,EACPnB,SAAUoB,IAEZ,cAAC,IAAD,CACEvB,MAAM,iBACNK,KAAK,SACLD,MAAOoB,EACPrB,SAAUsB,IAEZ,cAAC,IAAD,CACEzB,MAAM,+BACNK,KAAK,SACLD,MAAOsB,EACPvB,SAAUwB,OAGd,eAAC,IAAD,WACE,mDAAsBG,EAAaO,OAAOT,MAC1C,8BACE,mBAAGQ,KAAK,4MAAR,2CADF,KAIKN,EAAaO,OAAOlB,MAEzB,uEACmC,IAChCW,EAAaO,OAAOR","file":"static/js/5.1e68d68a.chunk.js","sourcesContent":["import React, { useCallback, ChangeEvent } from 'react';\nimport styled from 'styled-components';\n\nconst StyledWrapper = styled.div``;\nconst StyledInput = styled.input``;\nconst StyledLabel = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-bottom: 5px;\n`;\n\ntype Props = {\n  label: string;\n  onChange: (value: string) => void;\n  value: string;\n  type?: 'text' | 'number';\n  step?: number;\n};\nconst TextInput = (props: Props) => {\n  const { label, onChange, value, type = 'text', step } = props;\n\n  const handleChange = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      onChange(e.currentTarget.value);\n    },\n    [onChange],\n  );\n\n  return (\n    <StyledWrapper>\n      <StyledLabel>{label}</StyledLabel>\n      <StyledInput\n        onChange={handleChange}\n        type={type}\n        value={value}\n        step={step}\n      />\n    </StyledWrapper>\n  );\n};\n\nexport default TextInput;\n","import styled from 'styled-components/macro';\n\nconst Stack = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-row-gap: 10px;\n`;\n\nexport { Stack };\n","import { useMemo, useState } from 'react';\nimport styled from 'styled-components/macro';\nimport { Stack } from '../components/layout';\nimport TextInput from '../components/text-input';\n\nconst PageWrapper = styled.div``;\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 300px;\n`;\n\nconst ensureNumber = (input: any): number => {\n  const parsed = parseFloat(input);\n\n  if (Number.isFinite(parsed)) {\n    return parsed;\n  }\n\n  return 0;\n};\n\nconst StateTaxIncomeLimit = 537200;\n\nconst CalculateDecemberSalary = () => {\n  const [bruttoLonInput, handleBruttoLonChange] = useState('');\n  const [formanerInput, handleFormanerIChange] = useState('');\n  const [ersattningarOchPensionInput, handleErsattningarOchPensionChange] =\n    useState('');\n\n  const bruttoLon = ensureNumber(bruttoLonInput);\n  const formaner = ensureNumber(formanerInput);\n  const ersattningarOchPension = ensureNumber(ersattningarOchPensionInput);\n\n  const totalIncome = bruttoLon + formaner + ersattningarOchPension;\n\n  const suggestedDecSalary = StateTaxIncomeLimit - totalIncome;\n\n  const sekFormatter = useMemo(() => {\n    return new Intl.NumberFormat('sv-SE', {\n      style: 'currency',\n      currency: 'SEK',\n    });\n  }, []);\n\n  return (\n    <PageWrapper>\n      <h2>\n        Hur mycket behöver du ta i lön i december för att nå till gränsen\n        (Inkomstår 2021)\n      </h2>\n      <Wrapper>\n        <Stack>\n          <p>\n            Samla in samtliga{' '}\n            <a href=\"https://sso.skatteverket.se/ms/ms_web/page.do#/privat/skatter-deklaration/inkomstuppgifter\">\n              inkomstuppgifter från skatteverket\n            </a>{' '}\n            till och med November.\n          </p>\n          <TextInput\n            label=\"Bruttolön\"\n            type=\"number\"\n            value={bruttoLonInput}\n            onChange={handleBruttoLonChange}\n          />\n          <TextInput\n            label=\"Förmåner\"\n            type=\"number\"\n            value={formanerInput}\n            onChange={handleFormanerIChange}\n          />\n          <TextInput\n            label=\"Ersättningar och pension \"\n            type=\"number\"\n            value={ersattningarOchPensionInput}\n            onChange={handleErsattningarOchPensionChange}\n          />\n        </Stack>\n        <Stack>\n          <p>Inkomster totalt: {sekFormatter.format(totalIncome)}</p>\n          <p>\n            <a href=\"https://www.skatteverket.se/privat/etjansterochblanketter/svarpavanligafragor/inkomstavtjanst/privattjansteinkomsterfaq/narskamanbetalastatliginkomstskattochhurhogarden.5.10010ec103545f243e8000166.html\">\n              Brytpunkt innan statlig skatt\n            </a>\n            : {sekFormatter.format(StateTaxIncomeLimit)}\n          </p>\n          <p>\n            Föreslagen bruttolön i december:{' '}\n            {sekFormatter.format(suggestedDecSalary)}\n          </p>\n        </Stack>\n      </Wrapper>\n    </PageWrapper>\n  );\n};\n\nexport default CalculateDecemberSalary;\n"],"sourceRoot":""}